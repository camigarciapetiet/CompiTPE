INFORME TOKENS
 Identificador programa,  Palabra predefinida INT,  Identificador a.programa,  ;,  Palabra predefinida INT,  Identificador b.programa,  ;,  Palabra predefinida INT,  Palabra predefinida FUNC,  Identificador f2.programa,  (,  Palabra predefinida INT,  Identificador a.programa.f2,  ),  Palabra predefinida INT,  Identificador aux1.programa.f2,  ;,  Palabra predefinida BEGIN,  Palabra predefinida PRE,  :,  (,  Identificador a.programa.f2,  <,  Constante 1,  ),  ,,  Cadena cadena precondicion f2,  ;,  Identificador aux1.programa.f2,  Palabra predefinida :=,  Constante 5,  +,  Identificador a.programa.f2,  ;,  Palabra predefinida RETURN,  (,  Identificador aux1.programa.f2,  ),  ;,  Palabra predefinida END,  ;,  Palabra predefinida INT,  Palabra predefinida FUNC,  Identificador f1.programa,  (,  Palabra predefinida INT,  Identificador a.programa.f1,  ),  Palabra predefinida INT,  Identificador aux1.programa.f1,  ;,  Palabra predefinida BEGIN,  Palabra predefinida PRE,  :,  (,  Identificador a.programa.f1,  <,  Constante 1,  ),  ,,  Cadena cadena1,  ;,  Palabra predefinida TRY,  Identificador aux1.programa.f1,  Palabra predefinida :=,  Identificador f2.programa.f1,  (,  Constante 3,  ),  ;,  Palabra predefinida CATCH,  Palabra predefinida BEGIN,  Identificador aux1.programa.f1,  Palabra predefinida :=,  Constante 10,  ;,  Palabra predefinida END,  ;,  Palabra predefinida RETURN,  (,  Identificador aux1.programa.f1,  ),  ;,  Palabra predefinida END,  ;,  Palabra predefinida BEGIN,  Identificador a.programa,  Palabra predefinida :=,  Constante 2,  ;,  Palabra predefinida IF,  (,  Identificador a.programa,  Palabra predefinida ==,  Constante 2,  ),  Palabra predefinida THEN,  Palabra predefinida BEGIN,  Palabra predefinida PRINT,  (,  Cadena a es igual a 2,  ),  ;,  Palabra predefinida END,  ;,  Palabra predefinida ENDIF,  ;,  Identificador b.programa,  Palabra predefinida :=,  Constante 6,  ;,  Palabra predefinida TRY,  Identificador b.programa,  Palabra predefinida :=,  Identificador f1.programa,  (,  Constante 0,  ),  ;,  Palabra predefinida CATCH,  Palabra predefinida BEGIN,  Identificador b.programa,  Palabra predefinida :=,  Constante 10,  ;,  Palabra predefinida END,  ;,  Palabra predefinida END,  ;, 

INFORME REGLAS
 tipo INT,  Declaracion de datos,  tipo INT,  Declaracion de datos,  tipo INT,  tipo INT,  tipo INT,  Declaracion de datos,  factor ID,  Factor CTE,  pre-condicion,  Factor CTE,  factor ID,  Asignacion,  DECLARACION FUNCION Y PRE CONDICION,  factor ID,  tipo INT,  tipo INT,  tipo INT,  Declaracion de datos,  factor ID,  Factor CTE,  pre-condicion,  Factor CTE,  Asignacion,  Factor CTE,  Asignacion,  Sentencia TRY-CATCH,  DECLARACION FUNCION Y PRE CONDICION,  factor ID,  Factor CTE,  Asignacion,  factor ID,  Factor CTE,  clausula PRINT,  bloque de sentencias BEGIN-END,  Factor CTE,  Asignacion,  Factor CTE,  Asignacion,  Factor CTE,  Asignacion,  Sentencia TRY-CATCH,  Sentencia START programa, 

ERRORES LEXICOS


ERRORES SINTACTICOS


TABLA DE SIMBOLOS
{cadena1={uso=cadena}, a.programa.f2={uso=parametro, tipo=INT}, f2.programa={uso=funcion, tipo=INT, parametro=INT}, programa={uso=programa}, cadena precondicion f2={uso=cadena}, f1.programa={uso=funcion, tipo=INT, parametro=INT}, 0={uso=constante, tipo=INT}, 1={uso=constante, tipo=INT}, 2={uso=constante, tipo=INT}, 3={uso=constante, tipo=INT}, b.programa={uso=variable, tipo=INT}, a es igual a 2={uso=cadena}, 5={uso=constante, tipo=INT}, 6={uso=constante, tipo=INT}, aux1.programa.f2={uso=variable, tipo=INT}, f2.programa.f1={}, a.programa.f1={uso=parametro, tipo=INT}, a.programa={uso=variable, tipo=INT}, aux1.programa.f1={uso=variable, tipo=INT}, 10={uso=constante, tipo=INT}}
Palabras Predefinidas
{PRINT=264, ||=278, &&=279, <==282, PRE=273, <>=280, SINGLE=271, :==277, REPEAT=272, BEGIN=267, INT=270, RETURN=266, CATCH=276, BREAK=269, ELSE=262, TYPEDEF=274, TRY=275, CADENA=259, ID=257, IF=260, ===281, FUNC=265, ENDIF=263, CTE=258, THEN=261, END=268, >==283}
